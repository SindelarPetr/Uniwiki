@inherits UniwikiComponentBase

<header class="navbar-light bg-light shadow">
	<div class="container d-flex align-items-center py-2">
		<a class="navbar-brand" href="@PageRoutes.HomePage.BuildRoute()">Uniwiki</a>
		<AuthorizeView>
			<Authorized>
				<a class="ml-auto nav-item m-0 p-0 mr-3 d-flex align-items-center font-weight-bold" href="@PageRoutes.ProfilePage.BuildRoute(LoginService.User.NameIdentifier)"><img class="rounded-circle mr-2" src="@_profilePictureSrc" style="width: 1.9rem; height: 1.9rem; object-fit: cover">@_name</a>
			</Authorized>
			<NotAuthorized>
				<NavLink class="ml-auto nav-item mr-2 mr-md-3 btn btn-link px-0" href="@PageRoutes.LoginPage.BuildRoute()" Match="NavLinkMatch.All">@TextService.EmailConfirmedPage_LogIn</NavLink>
			</NotAuthorized>
		</AuthorizeView>

		@*<NavLink class="btn btn-secondary text-light nav-item" href="@PageRoutes.ChooseCoursePage.BuildRoute()" Match="NavLinkMatch.All">
				<i class="fas fa-search mr-2"></i>@TextService.SearchCourse
			</NavLink>*@
	</div>
</header>

@code {

	[Inject] ILoginService LoginService { get; set; }

	[CascadingParameter] private Task<AuthenticationState> AuthenticationState { get; set; }

	private string _name;
	private string _profilePictureSrc;

	protected override async Task OnParametersSetAsync()
	{
		await base.OnParametersSetAsync();

		await AuthenticationState;

		if (LoginService.IsAuthenticated)
		{
			_name = LoginService.User.FirstName;
			_profilePictureSrc = LoginService.User.ProfilePictureSrc;
		}
	}

}
